{% extends "base.html.twig" %}

{% block main %}
    <div class="row mt-5">
        <div class="col-md-4 order-md-2 mb-4">
            <h4 class="d-flex justify-content-between align-items-center mb-3">
                <span class="text-muted">Your cart</span>
                <span class="badge badge-secondary badge-pill">1</span>
            </h4>
            <ul class="list-group mb-3">
                <li class="list-group-item d-flex justify-content-between lh-condensed">
                    <div>
                        <h6 class="my-0">Pro plan</h6>
                    </div>
                    <span class="text-muted">$15</span>
                </li>
                <li class="list-group-item d-flex justify-content-between bg-light">
                    <div class="text-success">
                        <h6 class="my-0">Promo code</h6>
                        <small>EXAMPLECODE</small>
                    </div>
                    <span class="text-success">-$0</span>
                </li>
                <li class="list-group-item d-flex justify-content-between">
                    <span>Total (USD)</span>
                    <strong>$15</strong>
                </li>
            </ul>
        </div>

        <div class="col-md-8 order-md-1">
            <h4 class="mb-3">Register first (free)</h4>
            {{ form_start(registrationForm, {'attr': {'novalidate': 'novalidate', 'class': 'needs-validation'}}) }}
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="user_name">First name</label>
                        {{ form_widget(registrationForm.name) }}
                        <div class="invalid-feedback">
                            {{ form_errors(registrationForm.name) }}
                        </div>
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="user_las_name">Last name</label>
                        {{ form_widget(registrationForm.last_name) }}
                        <div class="invalid-feedback">
                            {{ form_errors(registrationForm.last_name) }}
                        </div>
                    </div>
                </div>

                <div class="mb-3">
                    <label for="user_email">Email</label>
                    {{ form_widget(registrationForm.email) }}
                    <div class="invalid-feedback">
                        {{ form_errors(registrationForm.email) }}
                    </div>
                </div>

                <div class="mb-3">
                    <label for="user_password_first">Password</label>
                    {{ form_widget(registrationForm.password.first) }}
                    <div class="invalid-feedback">
                        {{ form_errors(registrationForm.password.first) }}
                    </div>
                </div>

                <div class="mb-3">
                    <label for="user_password_second">Confirm Password</label>
                    {{ form_widget(registrationForm.password.second) }}
                    <div class="invalid-feedback">
                        {{ form_errors(registrationForm.password.second) }}
                    </div>
                </div>

                <hr class="mb-4">
                <button type="submit" class="btn btn-primary btn-lg btn-block">Register</button>
            {{ form_end(registrationForm) }}

        </div>
    </div>

{% endblock %}

{% block javascripts %}
    <script>
        // Example starter JavaScript for disabling form submissions if there are invalid fields
        (function () {
            'use strict';

            window.addEventListener('load', function () {
                // Fetch all the forms we want to apply custom Bootstrap validation styles to
                var forms = document.getElementsByClassName('needs-validation');

                // Loop over them and prevent submission
                var validation = Array.prototype.filter.call(forms, function (form) {
                    form.addEventListener('click', function (event) {
                        if (form.checkValidity() === false) {
                            event.preventDefault();
                            event.stopPropagation();
                        }
                        form.classList.add('was-validated');
                    }, false);
                });
            }, false);
        })();


        var password = document.getElementById("user_password_first"), confirm_password = document.getElementById("user_password_second");

        function validatePassword() {
            if (password.value != confirm_password.value) {
                confirm_password.setCustomValidity("Passwords Don't Match");
            } else {
                confirm_password.setCustomValidity('');
            }
        }
        password.onchange = validatePassword;
        confirm_password.onkeyup = validatePassword;
    </script>
{% endblock %}
