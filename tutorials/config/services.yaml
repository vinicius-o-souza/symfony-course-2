# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    download_directory: '../public/'
    videos_directory: '%kernel.project_dir%/public/uploads/videos'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $global: 'hello from global variable'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    
    app.myservice:
        class: App\Services\MyService
        arguments:
            $second_service: '@App\Services\MySecondService'
        properties:
            my: '@App\Services\MySecondService'
            logger: '@monolog.logger'
        public: true
                
    App\Services\MyService: '@app.myservice'
    
    # App\Services\MyService:
        
            
    App\Services\MySecondService:
        # lazy: true
        
    App\Services\TagExampleService:
        tags:
            - { name: doctrine.event_listener, event: postFlush }
            - { name: kernel.cache_clearer }
            
    App\Services\ServiceInterface: '@App\Services\MyService'
    
    # App\EventListener\VideoCreatedListener:
    #     tags:
    #         - { name: kernel.event_listener, event: video.created.event }